dist: xenial
language: python
python:
- '3.6'
- '3.7'
install:
# workaround for backward compatibility to Poetry: https://github.com/sdispater/poetry/issues/1049
- pip install --upgrade pip==18.1
- pip install poetry codacy-coverage
- poetry install
script:
- make -f Makefile.ci
after_success:
- python-codacy-coverage -r coverage.xml
before_deploy:
- poetry config http-basic.pypi thilp "$PYPI_PASSWORD"
# Set up git user and tag this commit
- git config --local user.name "$GITHUB_USERNAME"
- git config --local user.email "$GITHUB_EMAIL"
- export TRAVIS_TAG=$(poetry run transformer --version)
- git tag $TRAVIS_TAG
deploy:
  # Main releases: tags set on master
  - provider: script
    script: poetry publish --build
    on:
      branch: master
      # We don't want to publish a release twice (once for each supported
      # python version), but we also cannot use skip_existing because
      # deployment should fail if not at least one release is published to PyPI
      # successfully. This prevents the case where someone forgot to update the
      # version number in a PR.
      python: '3.7'
  - provider: releases
    api_key: $GITHUB_TOKEN
    file_glob: true
    file: dist/*
    skip_cleanup: true
    on:
      tags: true
      branch: master
      python: '3.7'
env:
  global:
  - secure: duPuFLBO/bAeEnBHEQ7EHX07rLa7RO69PKH3+vTBmFVIqpZEh+X5psXTHClpFAT39AsUVvwKl5ZPwxunTOA13h6/b34M9WvArNOmMgrFvtsy2uqS9l/EJKMhhRpdL0h9Hk08Po1gJ7hEbOmFtadWtYXhge0z6bC4ykDCdKyO02sMNVceu0c+Q4j8mlV55iUjR0k9XYTRXHPyCZvhQRlWRu2SpFu+bS+i46ckdTtcLlHi0jDCAIc3od+j0ZT1CMSRdg0Bg81C9U7zCcPSpFk4AMdUjXw1h8k+7iFzzknyMDyVRi9pocPk8WXEN8i0OTGIsYCPWhgqcNP1o37xCXQj/7qPjvVYbF32vS9Ab+0RGySjlwBS19c5DoU/46IK6YR9Gpy8jmbTGbKdsK2grmg5AHs+Xv5/a5zbFoHiLRMSvqT5S8ZiAoHDKuBAQKXnHJEVYxmr1GqeOz6xPyEQlzrlbkKQlkO+D4oo3EALkq43dPo/fyKwgGVrOCyoEAfpRh/R448mVZKkuOb+IKnQCsRILpPeD8ZxQfQriVHeS4pMvZHmWA4hogZdGWe1a8xwDD2/RVclmaofyoT2HPPFgkY0wBDNlPC/RYvyXTSmAQ8XEk0CfzYh8IPsLys6v1E8MZqWG7s2xrbXQCz5jPGmmZ7MTuA20vUXGvyJCoPC6AJ/+xE=
  - secure: jbBAT/2JL7CzsTiJyeTGDoFbAfI6fpltSH7f8t+aC2xC43OcqidBRQqxWpZx8z4YYwHO2o4o91B91J62sLsv6j3oVJcK7SeOdR1pZAN3CdPMMIpi6bwjvLF7/LtbhkPuxFx2aeii+++0Cpw1mAag1chDwuXlLYbGrI6MLttlnl78i7BSGx+Sc+/PK4MQI4GFnk4+qkRfuEeP8cwsAvWThvu+d1f38HB4b96JUBFke7odJbJ0ewRcERXBRGHvigvQPqFQhJWkMKv2kf9EajFP5HzPiqhgliBJ5UlZM61z/+3dzAs+rd/82zzRy5Ny7mtYqHuDbCxJgOZ6KyPtGGMYwlqsI75P2KFAzFt9I2LCsbo1sU7Ze0UxkDbXLkFBo9MB0pG5eJ/C+SMWmEiHXCrP45my7Q5Tt7YWK43pm45byduR2iDGaB0MrraizTn9bAW3QNWHBSaksQVHE2Hx7tmsg/iihxsQHQwfjCDeIrcErCe4jLPEdUNxKSlIsd40fx0cxYP3pIo6TSJbawzLbD6WQz+4bSMz5BQD98ZHH7Wa0sb8xoDQTV1Y2C/NvnmkT7pmUmQ30A9k3r5RXILDUQAncULqU3j1PqlAH7BeLNqpEuImLkuWpqNhP96h9WXlYB4blAWWN9xLmmQKtVwM2keG6iJxm2VYm0kSr/66qWj2lvg=
  - secure: gtWNj8Hxt777whx9yG65JUZmR8vpzhDiRqKM0MK9EY60tWROPkYrkEp7OEOKZBimNEaItn9dLJPAnrXKl9eZI5CMdCgJouqiNx3eu3XFsB6PkrvapVbBw0Ku/bIzArFXak/2ZiuSjceJnDC7l/pivmuiPQb/LU5ApFZqsmHzAE1sswk2v/UDeUGGX5kooIRx3mN3ma0TLRHgODN3BcidzaAawoXdo7fwBmTxd0e6U0Jm1dUv81+6IbbOUSpy99mePrQj/0I8Qz7Lu0v6vDaDhfkC8Yo06N8w/0pPTV+k8ckgb405hsLJcoWLPFpO33lTkKoHN5gxrqvhVq7RJ2MsbsGe4NLgk5rlpepjweVDE+LMFY9mNBezQN8LjUJ/NnZQX7x8cx2XISoFmk46Ikx2kBLlWxeK/hsfPkvwpbKYXohGphKRsTMeBaHrxssaXZvXENr9a+RqxPRl38dDhlCtBAcB2D/d/JAF3q7yZxQQ9ZZCxDuSPRxeNJX7CL2TpFwOMaBkYddalvMqQsJdWbA566Gxjx1Xiu3K4WMQAIm1RVVav8lxeY2a+aMTE4kShg8xCMGWZuSjz2dZjqYj67yVTNM3uneO5aP+vPVxAxoNrHxOLhSPvG+hZlOxaDGwZ4PGfbRyxT6C3uO0MaESIKLhWLc5QCtEMs1NwyoBL8LWAjE=
  - secure: I9YmyVoGTAgHxuKmUB+K2uSaFSK90Pp5keqv6fcc3wtZlshJHIaeoo24Kde6nvBO2ieLEXzoOeIDYhN5IEqxixcb/TxUmSsSHfF6JIRYV4eVCShfm9PMFb7BYYvjYN6tbyCMG6bpTJ0SoW8qHWcugWlbN7mYSNVvhHBuBO4l118xtYzY+ZVcQZduYAYhKajqWKSCFNYQwcObXxRd1kOpZj3wesloNGQybc2PnHVEHgYVFepj5qiGMN1Tswooh8nIOvLXNHXLd12ks9RDxuaTjnaTJJfPUfhJWFgZ8mEGruuP8bA0VpPRwfaIU5rr2GZpe0jtBbkm/xRIR3TavXsI6yxs0DpFHtxcI2/XaOfHeKnq3xV799lPdR7P/R9mGCzbDZFQ4fFRzQxRdzD+KtkNSMOegWafY6YrG+vgtQhISTd3LexUvlVrcTSLRYevZR3aXsAYN+pTJgNi0bBv9xvX3Jk7NfmfYb8ffWGh27y1kHnISBg9sapXy+EOaxVbBNQ0cROyOkqDQep+5SI2CHnpAcdceKOsvsjD3cSk0jW2ordHrBiJ6aZQrxH9OTkopWVExL1p9gKBjCIjNahTLjEPMbLlEt9hxh1/WiXvsB3IbqDAJOdd55xnlIdPa4Otzyma1ytgjCUUeftXsXhqYn/v3NNmrk7fUUiKc0hSw1CNQqk=
  - secure: PE0j6ZKDxQGedlo6EIof+oISi40jfsNwqrpCOPXh56QgPmcYdp8POtXuCOZ82ZpnPON5hCtbn+KCBSq4kFd8pmyND7R3WNJYwMEy9E4QoIkvGrE/QLRKb+8UaM7ytOdoRVwdqk7T2Fdc8WcerItfGtpHDGioNoaDDrptimNC2sH5FhhkY7zvzbR52rDLLnScPyizkoho9vqVeo2EDgZjpts208bjZlZnPCyss50+ARfmagOX9YBW7yYkUrdgQfS9xkAzHhJsoQLuOIx2d7HKnt84HIbcQ6o7GGE51MqfXcLdUirHAkhx2bNocmXGmeogMOnIPdZ79nsf8f5j9Dozu49ojyC76cyM/5ZdCJEG1NEb95W1BNOsFygeQHZw7Swn6oo4FPKz9HOOFraoT94zUrxPt+ooXXDD9sSWCMD8NWvmOwhogZCUMDjiafl6Xzlv8rjGr6C4Ov6cD3XkFn4Ex5vsMQM7i8/1AQxjZOXm8p28yJ0hZH2u9Ra0CE2R3RBOQAYsY3jkuXX1TO+RrN06Ee6DAi1BzlsbLnwetoq+WLX0D8FQ55WeYVecIo2I0F9LbMpnqtyYHcCzrwDrm7ec0uqlNTXFaRLL/6Ymh+VB/3ArvlHa0fmSPpf5EzCZgD8T0V9sU7jv5KGZaXUNxiTZdqnCxBx2Qk1QQDMoI7go0Kk=